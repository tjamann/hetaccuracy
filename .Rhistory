y<-rnorm(1000, mean = 0.5, sd = 0.3)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red",freq=F,xlim=c(0,1))
plot(B,col="red",freq=F,xlim=c(0,1))
plot(C,col="red",freq=F,xlim=c(0,1))
w<-rnorm(1000, mean = 0.5, sd = 0.1)
x<-rnorm(1000, mean = 0.5, sd = 0.2)
y<-rnorm(1000, mean = 0.5, sd = 0.3)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(1000, mean = 0.5, sd = 0.1)
x<-rnorm(1000, mean = 0.5, sd = 0.2)
y<-rnorm(1000, mean = 0.5, sd = 0.3)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(1000, mean = 0.5, sd = 0.1)
x<-rnorm(1000, mean = 0.5, sd = 0.2)
y<-rnorm(1000, mean = 0.5, sd = 0.3)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(1000, mean = 0.5, sd = 0.07)
x<-rnorm(1000, mean = 0.5, sd = 0.15)
y<-rnorm(1000, mean = 0.5, sd = 0.25)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.07)
x<-rnorm(10000, mean = 0.5, sd = 0.15)
y<-rnorm(10000, mean = 0.5, sd = 0.25)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.07)
x<-rnorm(10000, mean = 0.5, sd = 0.15)
y<-rnorm(10000, mean = 0.5, sd = 0.25)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.07)
x<-rnorm(10000, mean = 0.5, sd = 0.15)
y<-rnorm(10000, mean = 0.5, sd = 0.2)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.19)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1))
plot(B,col="red", xlim=c(0,1))
plot(C,col="red", xlim=c(0,1))
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1), title = "A")
plot(B,col="red", xlim=c(0,1), title = "B")
plot(C,col="red", xlim=c(0,1), title = "C")
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1), title = "A")
plot(B,col="red", xlim=c(0,1), title = "B")
plot(C,col="red", xlim=c(0,1), title = "C")
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1), main = "A")
plot(B,col="red", xlim=c(0,1), main = "B")
plot(C,col="red", xlim=c(0,1), main = "C")
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1), main = "A")
plot(B,col="red", xlim=c(0,1), main = "B")
plot(C,col="red", xlim=c(0,1), main = "C")
w<-rnorm(10000, mean = 0.5, sd = 0.05)
x<-rnorm(10000, mean = 0.5, sd = 0.11)
y<-rnorm(10000, mean = 0.5, sd = 0.17)
A <- density(w)
B <- density(x)
C <- density(y)
plot(A,col="red", xlim=c(0,1), main = "A")
plot(B,col="red", xlim=c(0,1), main = "B")
plot(C,col="red", xlim=c(0,1), main = "C")
Drift_graph100 = function(t,R){
N<-100
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="2N=200")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
Drift_graph15 = function(t,R){
N<-15
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="2N=200")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
par(mfrow=c(1,2))
Drift_graph100(50,20)
Drift_graph15(50,20)
par(mfrow=c(1,2))
Drift_graph15(50,10)
Drift_graph100(50,10)
Drift_graph100 = function(t,R){
N<-100
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="Neutral locus linked to selected locus")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
Drift_graph15 = function(t,R){
N<-15
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="Neutral locus unlinked to selected locus")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
par(mfrow=c(1,2))
Drift_graph15(50,10)
Drift_graph100(50,10)
Drift_graph100 = function(t,R){
N<-100
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="Neutral locus linked to selected locus")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
Drift_graph15 = function(t,R){
N<-15
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="Neutral locus unlinked to selected locus")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
par(mfrow=c(1,2))
Drift_graph15(50,5)
Drift_graph100(50,5)
par(mfrow=c(1,2))
Drift_graph15(50,5)
Drift_graph100(50,10)
par(mfrow=c(1,2))
Drift_graph15(50,5)
Drift_graph100(50,10)
Drift_graph100 = function(t,R){
N<-100
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="Neutral locus unlinked to selected locus")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
Drift_graph15 = function(t,R){
N<-15
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="Neutral locus linked to selected locus")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
par(mfrow=c(1,2))
Drift_graph15(50,5)
Drift_graph100(50,10)
Drift_graph100 = function(t,R){
N<-100
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="Neutral locus unlinked to selected locus")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
Drift_graph15 = function(t,R){
N<-15
p<-0.5
freq<-as.numeric();
for( i in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq[length(freq)+1]<-p;
}
plot(freq,type="l",ylim=c(0,1),col=3,xlab="Number of generations",ylab="Allele frequency", main="Neutral locus linked to selected locus")
for(u in 1:R){
freq1<-as.numeric();
p<-0.5
for( j in 1:t ){
A1=rbinom(1,2*N,p)
p=A1/(N*2);
freq1[length(freq1)+1]<-p;
}
random<-sample(1:1000,1,replace=F)
randomcolor<-colors()[random]
lines(freq1,type="l",col=(randomcolor))
}
}
par(mfrow=c(1,2))
Drift_graph15(50,5)
Drift_graph100(50,10)
setwd("~/Google Drive/final_analysis_LRS/pilot_22Apr2016_final/alignments")
ampliconcoverage <- read.delim("all.ampliconcoverage.txt", header=FALSE)
View(ampliconcoverage)
ampliconcoverage <- read.delim("all.ampliconcoverage.txt", header=FALSE)
View(ampliconcoverage)
ampliconcoverage <- read.delim("all.ampliconcoverage.txt", header=FALSE)
View(ampliconcoverage)
ampliconcoverage <- read.delim("all.ampliconcoverage.txt", header=FALSE)
View(ampliconcoverage)
ampliconcoverage <- read.delim("all.ampliconcoverage.txt", header=FALSE)
View(ampliconcoverage)
ampliconcoverage <- read.delim("all.ampliconcoverage.txt", header=FALSE)
View(ampliconcoverage)
ampliconcoverage <- read.delim("~/Google Drive/final_analysis_LRS/pilot_22Apr2016_final/alignments/ampliconcoverage.txt", header=FALSE)
View(ampliconcoverage)
View(ampliconcoverage)
ampliconcoverage$V6 <- ampliconcoverage$V7 * ampliconcoverage$V8
numsamples <- length(unique(ampliconcoverage$V11)) - 1
library(plyr)
averagedepth <- ddply(ampliconcoverage, .(V4), summarise, sum = sum(V6), ampliconlength = round(mean(V9)))
averagedepth$averagedepth <- c(averagedepth$sum/(averagedepth$ampliconlength*numsamples))
View(averagedepth)
plot(averagedepth$ampliconlength, averagedepth$averagedepth)
library(ggplot2)
ampdepthchart <- ggplot(averagedepth, aes(x=ampliconlength, y=averagedepth)) + geom_point(shape=1) + geom_smooth(method=lm) + ggtitle("Average depth vs. amplicon depth\npilot (Dec 2014)") + ylab("Amplicon average depth (x)") + xlab("Amplicon length (bp)") + ylim(0,1400)
ggsave(ampdepthchart, file="average_depth_amplicon.pdf", width=6, height=6)
ggsave(ampdepthchart, file="average_depth_amplicon.png", width=6, height=6)
ampdepthchart
setwd("~/Google Drive/final_analysis_LRS/pilot_22Apr2016_final/derived files")
representationofamplicons <- read.csv("~/representationofamplicons.csv", header=FALSE)
ls
representationofamplicons <- read.csv("~/representationofamplicons.csv", header=FALSE)
representationofamplicons <- read.csv("~/representationofamplicons.csv", header=FALSE)
representationofamplicons <- read.csv("representationofamplicons.csv", header=FALSE)
View(representationofamplicons)
representationofamplicons <- read.csv("representationofamplicons.csv", header=FALSE)
library(ggplot2)
p <- ggplot(representationofamplicons, aes(V4, V8))
pp <- p + geom_point() + geom_smooth(method=lm, se=FALSE) + theme_bw() + labs(x="Length of Amplicon (bp)", y="Number of reads")
pp
summary(lm(representationofamplicons$V8~representationofamplicons$V4))
View(representationofamplicons)
p <- ggplot(representationofamplicons, aes(V8, V7))
pp <- p + geom_point() + geom_smooth(method=lm, se=FALSE) + theme_bw() + labs(x="Length of Amplicon (bp)", y="Number of reads")
pp
p <- ggplot(representationofamplicons, aes(V9, V7))
pp <- p + geom_point() + geom_smooth(method=lm, se=FALSE) + theme_bw() + labs(x="Length of Amplicon (bp)", y="Number of reads")
pp
summary(lm(representationofamplicons$V8~representationofamplicons$V4))
summary(lm(representationofamplicons$V9~representationofamplicons$V4))
summary(lm(representationofamplicons$V9~representationofamplicons$V7))
summary(aov(representationofamplicons$V9~representationofamplicons$V7))
summary(lm(representationofamplicons$V9~representationofamplicons$V7))
lm(representationofamplicons$V9~representationofamplicons$V7)
cor(representationofamplicons$V9~representationofamplicons$V7)
cor(representationofamplicons$V9, representationofamplicons$V7)
cor.test(representationofamplicons$V9, representationofamplicons$V7)
View(representationofamplicons)
p <- ggplot(representationofamplicons, aes(V9, V7))
pp <- p + geom_point() + theme_bw() + labs(x="Length of Amplicon (bp)", y="Number of reads")
pp
```
p <- ggplot(representationofamplicons, aes(V9, V7))
pp <- p + geom_point() + theme_bw() + labs(x="Length of Amplicon (bp)", y="Number of reads")
pp
ggsave(pp, file="reads_ampliconlength.png", width = 6, height = 6, dpi = 300)
ggsave(pp, file="reads_ampliconlength.tiff", width = 6, height = 6, dpi = 300)
ggsave(pp, file="reads_ampliconlength.tiff", width = 3, height = 3, dpi = 300)
ggsave(pp, file="reads_ampliconlength.tiff", width = 6, height = 6, dpi = 300)
91.26+93.58
184.84/2
(95.08+97.66)/2
setwd("~/Google Drive/final_analysis_LRS/pilot_22Apr2016_final/workdir")
genos <- read.delim("out.012", header=FALSE)
indiv <- read.table("out.012.indv", quote="\"", comment.char="")
View(genos)
setwd("~/Google Drive/final_analysis_LRS/pilot_22Apr2016_final/workdir")
genos <- read.delim("out.012", header=FALSE)
indiv <- read.table("out.012.indv", quote="\"", comment.char="")
genos$V1 <- NULL
gi <- cbind(indiv, genos)
row.names(gi) <- gi$V1
gi=gi[,-1]
tgi <- as.data.frame(t(gi))
samBC <- tgi[ ,1:3]
samBM <- tgi[ ,4:6]
gatBC <- tgi[ ,7:9]
gatBM <- tgi[ ,10:12]
View(gatBC)
